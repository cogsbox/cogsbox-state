{"version":3,"file":"Functions.jsx","sources":["../src/Functions.tsx"],"sourcesContent":["import { type FormOptsType } from './CogsState';\r\n\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport React from 'react';\r\nimport { getGlobalStore } from './store';\r\n\r\nexport type ValidationWrapperProps = {\r\n  formOpts?: FormOptsType;\r\n  path: string[];\r\n  stateKey: string;\r\n  children: React.ReactNode;\r\n  validIndices?: number[];\r\n};\r\nexport function ValidationWrapper({\r\n  formOpts,\r\n  path,\r\n  stateKey,\r\n  children,\r\n  validIndices,\r\n}: ValidationWrapperProps) {\r\n  const { getInitialOptions, getShadowMetadata } = getGlobalStore.getState();\r\n  const thisStateOpts = getInitialOptions(stateKey!);\r\n\r\n  // GET VALIDATION FROM SHADOW METADATA\r\n  const shadowMeta = getShadowMetadata(stateKey!, path);\r\n  const validationState = shadowMeta?.validation;\r\n  const status = validationState?.status || 'PRISTINE';\r\n  const hasError = status === 'VALIDATION_FAILED' || status === 'INVALID_LIVE';\r\n  const message = validationState?.message;\r\n\r\n  console.log('ValidationWrapper shadow:', {\r\n    stateKey,\r\n    path,\r\n    shadowMeta,\r\n    status,\r\n    message,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {thisStateOpts?.formElements?.validation &&\r\n      !formOpts?.validation?.disable ? (\r\n        thisStateOpts.formElements!.validation!({\r\n          children: (\r\n            <React.Fragment key={path.toString()}>{children}</React.Fragment>\r\n          ),\r\n          status, // Pass status instead of active\r\n          message: formOpts?.validation?.hideMessage\r\n            ? ''\r\n            : formOpts?.validation?.message || message || '',\r\n          path: path,\r\n          stretch: formOpts?.validation?.stretch,\r\n        })\r\n      ) : (\r\n        <React.Fragment key={path.toString()}>{children}</React.Fragment>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["ValidationWrapper","formOpts","path","stateKey","children","validIndices","getInitialOptions","getShadowMetadata","getGlobalStore","thisStateOpts","shadowMeta","validationState","status","message","jsx","Fragment","React"],"mappings":";;;AAaO,SAASA,EAAkB;AAAA,EAChC,UAAAC;AAAA,EACA,MAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,cAAAC;AACF,GAA2B;AACzB,QAAM,EAAE,mBAAAC,GAAmB,mBAAAC,MAAsBC,EAAe,SAAA,GAC1DC,IAAgBH,EAAkBH,CAAS,GAG3CO,IAAaH,EAAkBJ,GAAWD,CAAI,GAC9CS,IAAkBD,GAAY,YAC9BE,IAASD,GAAiB,UAAU,YAEpCE,IAAUF,GAAiB;AAEjC,iBAAQ,IAAI,6BAA6B;AAAA,IACvC,UAAAR;AAAA,IACA,MAAAD;AAAA,IACA,YAAAQ;AAAA,IACA,QAAAE;AAAA,IACA,SAAAC;AAAA,EAAA,CACD,GAGC,gBAAAC,EAAAC,GAAA,EACG,UAAAN,GAAe,cAAc,cAC9B,CAACR,GAAU,YAAY,UACrBQ,EAAc,aAAc,WAAY;AAAA,IACtC,4BACGO,EAAM,UAAN,EAAsC,UAAAZ,KAAlBF,EAAK,UAAsB;AAAA,IAElD,QAAAU;AAAA;AAAA,IACA,SAASX,GAAU,YAAY,cAC3B,KACAA,GAAU,YAAY,WAAWY,KAAW;AAAA,IAChD,MAAAX;AAAA,IACA,SAASD,GAAU,YAAY;AAAA,EAAA,CAChC,IAED,gBAAAa,EAACE,EAAM,UAAN,EAAsC,UAAAZ,EAAA,GAAlBF,EAAK,SAAA,CAAsB,GAEpD;AAEJ;"}