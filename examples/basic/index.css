@import "tailwindcss";

.input {
  @apply rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500;
}

@layer base {
  /* Stepped gradient background for pixel aesthetic */

  /* Lightning flash - must be behind content */
  .lightning-flash {
    position: fixed !important;
    z-index: -2 !important;
    pointer-events: none !important;
  }

  /*
    The main container for the effect.
    We'll send it behind other content with a negative z-index.
  */
  .pixel-rain-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    /* CSS WIND ANIMATION - No more JavaScript needed! */
    animation: wind-sway 22s ease-in-out infinite;
  }

  /* Pure CSS wind animation */
  @keyframes wind-sway {
    0% {
      transform: translateX(0px);
    }
    25% {
      transform: translateX(140px);
    }
    50% {
      transform: translateX(-60px);
    }
    75% {
      transform: translateX(80px);
    }
    100% {
      transform: translateX(0px);
    }
  }

  .pixel-raindrop {
    position: absolute;
    bottom: 100%;
    width: 1px;
    height: 60px;
    background-color: #dfe4ec;
    image-rendering: pixelated;

    /* Combined animations */
    animation: pixel-fall var(--duration) linear var(--delay) infinite,
      pixel-stem-fade var(--duration) linear var(--delay) infinite;
  }

  /*
    Splat container - separate from wind container
  */
  .pixel-splat-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    /* No wind animation here! */
  }

  /*
    The "splat" effect that happens at the end of the fall.
    It's an expanding, pixelated border.
  */
  .pixel-splat {
    position: absolute;
    bottom: 100%;

    margin-left: -6px;
    margin-top: -1px;
    border: 1px solid rgba(220, 225, 235, calc(1 * var(--drop-opacity)));
    border-radius: 100%;
    image-rendering: pixelated;
    opacity: 0;
    transform: translateX(
      calc(var(--wind-offset, 0px) * -1)
    ); /* Counter the wind */
    animation: pixel-splat-expand var(--splat-duration) linear var(--delay)
      infinite;
  }

  /* Counter wind animation for splats to stay in place */
  @keyframes wind-counter-sway {
    0% {
      transform: translateX(0px) translateY(var(--end-height));
    }
    25% {
      transform: translateX(-140px) translateY(var(--end-height));
    }
    50% {
      transform: translateX(60px) translateY(var(--end-height));
    }
    75% {
      transform: translateX(-80px) translateY(var(--end-height));
    }
    100% {
      transform: translateX(0px) translateY(var(--end-height));
    }
  }

  /* --- KEYFRAMES --- */

  /* The main falling animation for the entire drop - SIMPLIFIED WITHOUT WIND CALC */
  @keyframes pixel-fall {
    0% {
      transform: translateY(0vh);
    }
    75% {
      transform: translateY(var(--end-height));
    }
    100% {
      transform: translateY(var(--end-height));
    }
  }

  /* The animation for the stem to fade out */
  @keyframes pixel-stem-fade {
    0%,
    65% {
      opacity: calc(0.6 * var(--drop-opacity));
    }
    75% {
      opacity: calc(0.1 * var(--drop-opacity));
    }

    100% {
      opacity: 0;
    } /* Disappears as the drop hits the ground */
  }

  /* The animation for the splat to expand and fade */
  @keyframes pixel-splat-expand {
    0%,
    30% {
      opacity: 0;
      transform: translateY(var(--end-height));
      width: calc(4px * var(--size-modifier, 1));
      height: calc(1px * var(--size-modifier, 1));
      margin-left: calc(-2px * var(--size-modifier, 1));
      margin-top: calc(-0.5px * var(--size-modifier, 1));
      border-width: 1px;
    }
    50% {
      opacity: 0.7;
      transform: translateY(var(--end-height));
      width: calc(20px * var(--size-modifier, 1));
      height: calc(5px * var(--size-modifier, 1));
      margin-left: calc(-20px * var(--size-modifier, 1));
      margin-top: calc(-5px * var(--size-modifier, 1));
      border-width: calc(2px * var(--size-modifier, 1));
    }
    60% {
      opacity: calc(0.7 * var(--drop-opacity));
    }
    100% {
      opacity: 0;
      transform: translateY(var(--end-height));
      width: calc(80px * var(--size-modifier, 1));
      height: calc(20px * var(--size-modifier, 1));
      margin-left: calc(-40px * var(--size-modifier, 1));
      margin-top: calc(-10px * var(--size-modifier, 1));
      border-width: calc(3px * var(--size-modifier, 1));
    }
  }
}
